# system configuration
hadoop_bin=/home/frai/bcc/tcc2/hadoop-1.2.1/bin/hadoop # path to the hadoop executable
base_path=/home/frai/bcc/tcc2/fdr_parallel/fdr_parallel # complete path to the 'BoW_package' folder
m=5 # number of mappers to be used (set with the number automaticaly defined by Hadoop)
r=5 # number of reducers to be used
Sr=0.01 # sampling ratio for SnI

# dataset configuration
dataset=synthetic_hadoop.dat # dataset name
dimensionality=15 # dataset dimensionality
size=100000 # dataset size (total number of points)
input=hdfs/$dataset/ # complete path in the HDFS file system to the data files

# initial wall-clock time meassurement
initialTime="$(date +%s)"

echo "Generating jar file..."
javac CustomFileInputFormat.java CustomRecordReader.java -cp hadoop-core-1.2.1.jar
jar cf CustomRecordReader.jar CustomFileInputFormat.class CustomRecordReader.class
echo "Finished"

# ParC is expected to be the fastest option for this configuration
echo "Running ParC on dataset $dataset using $r reducers."

cd $base_path/ParC
make spotless
make

rm -f dimensionality
echo $dimensionality > dimensionality
rm -f size
echo $size > size
rm -f divisions
echo $r > divisions

$hadoop_bin fs -rmr ParC
$hadoop_bin fs -mkdir ParC

rm -r -f ../results/$dataset
mkdir ../results/$dataset
mkdir ../results/$dataset/output_parallel_$r

echo "Running Hadoop..."
$hadoop_bin jar ../myHadoopStreaming.jar -libjars ../CustomRecordReader.jar -D mapred.task.timeout=0 -inputformat fdr.CustomFileInputFormat -inputreader fdr.CustomRecordReader -mapper mapper -reducer reducer -partitioner org.apache.hadoop.myClasses.myPartitioner -file mapper -file reducer -file dimensionality -file size -file divisions -file parameters -input $input -output ParC/output/ -numReduceTasks $r
echo "Finished"


$hadoop_bin fs -get ParC/output/* ../results/$dataset/output_parallel_$r/
$hadoop_bin fs -rmr ParC

# final wall-clock time meassurement
totalTime=`echo "$(date +%s) - $initialTime" | bc -l`
echo $totalTime > ../results/$dataset/output_parallel_$r/time

#cleanup
echo "Cleaning..."
make spotless
rm -f dimensionality
rm -f size
rm -f divisions
rm -f sample
rm -f part-00000
